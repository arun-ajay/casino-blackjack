pragma solidity 0.6.6;

contract test {
    mapping(address => bytes32) public mapBytes32;
    mapping(address => string) public mapString;

    constructor() public {}

    function casinoCommit() external {
        mapBytes32[msg.sender] = keccak256(
            abi.encodePacked(
                string(

                )
            )
        );
    }

    function bytes32ToString(bytes32 _bytes32) public returns (string memory) {
        string memory bar = string(abi.encodePacked(_bytes32));
        mapString[msg.sender] = bar;
    }
}
